{"version":3,"sources":["helpers/api.ts","helpers/filters.ts","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["getGoods","a","fetch","response","json","FILTERS","id","name","title","GoodsList","goods","className","map","color","key","style","App","useState","setGoods","isLoading","setIsLoading","filterName","setTimeout","sort","b","localeCompare","slice","filter","goodsItem","console","log","type","onClick","loadGoods","ReactDOM","render","document","getElementById"],"mappings":"sPAEaA,EAAQ,uCAAG,4BAAAC,EAAA,sEACCC,MAAM,GAAD,OAHA,6DAGA,gBADN,cAChBC,EADgB,yBAGfA,EAASC,QAHM,2CAAH,qDCARC,EAAsB,CACjC,CACEC,GAAI,EACJC,KAAM,MACNC,MAAO,kBAGT,CACEF,GAAI,EACJC,KAAM,YACNC,MAAO,sBAGT,CACEF,GAAI,EACJC,KAAM,UACNC,MAAO,mBCXEC,EAAsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpD,OACE,wBAAIC,UAAU,cACXD,EAAME,KAAI,gBAAGN,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMM,EAAb,EAAaA,MAAb,OACT,wBACEF,UAAU,kBACVG,IAAKR,EACLS,MAAO,CAAEF,MAAM,GAAD,OAAKA,KAElBN,QCiEIS,G,MA1EO,WAAO,IAAD,EACAC,mBAAuB,IADvB,mBACnBP,EADmB,KACZQ,EADY,OAEQD,oBAAkB,GAF1B,mBAEnBE,EAFmB,KAERC,EAFQ,iDAI1B,WAAyBC,GAAzB,eAAApB,EAAA,+EAEwBD,IAFxB,OAEUU,EAFV,OAGIU,GAAa,GAEbE,YAAW,WACT,OAAQD,GACN,IAAK,YACHH,EAAS,YAAIR,GACVa,MAAK,SAACtB,EAAGuB,GAAJ,OAAUvB,EAAEM,KAAKkB,cAAcD,EAAEjB,SACtCmB,MAAM,EAAG,IACZ,MAEF,IAAK,UACHR,EAASR,EACNiB,QAAO,SAACC,GAAD,MAA+C,QAApBA,EAAUf,UAC/C,MAEF,QACEK,EAASR,GAIbU,GAAa,KACZ,KAxBP,gDA2BIS,QAAQC,IAAR,MA3BJ,0DAJ0B,sBAmC1B,OACE,yBAAKnB,UAAU,aACb,yBAAKA,UAAU,oBACZN,EAAQO,KAAI,gBAAGN,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACX,4BACEM,IAAKR,EACLyB,KAAK,SACLpB,UAAU,yCACVqB,QAAS,kBA3CO,2CA2CDC,CAAU1B,KAExBC,OAINW,EACC,yBAAKR,UAAU,oBACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACnB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,wBACnB,yBAAKA,UAAU,eAMrB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAWD,MAAOA,SCrEhCwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.754cee55.chunk.js","sourcesContent":["export const API_URL:string = 'https://mate-academy.github.io/react_dynamic-list-of-goods';\n\nexport const getGoods = async () => {\n  const response = await fetch(`${API_URL}/goods.json`);\n\n  return response.json();\n}\n","import { IFilters } from \"./interfaces\";\n\nexport const FILTERS: IFilters[] = [\n  {\n    id: 1,\n    name: 'all',\n    title: 'Load All goods',\n  },\n\n  {\n    id: 2,\n    name: 'firstFive',\n    title: 'Load 5 first goods',\n  },\n\n  {\n    id: 3,\n    name: 'redOnly',\n    title: 'Load red goods',\n  }\n]\n","import React from 'react';\nimport { IGoodsItem } from '../helpers/interfaces';\n\ntype GoodsListProps = {\n  goods: IGoodsItem[]\n}\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => {\n  return (\n    <ul className=\"collection\">\n      {goods.map(({ id, name, color }) => (\n        <li\n          className=\"collection-item\"\n          key={id}\n          style={{ color: `${color}`, }}\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import React, { useState } from 'react';\nimport { getGoods } from './helpers/api';\nimport { IGoodsItem } from './helpers/interfaces';\nimport { FILTERS } from './helpers/filters';\nimport { GoodsList } from './components/GoodsList';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState<IGoodsItem[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  async function loadGoods(filterName: string) {\n    try {\n      const goods = await getGoods();\n      setIsLoading(true);\n\n      setTimeout(() => {\n        switch (filterName) {\n          case 'firstFive':\n            setGoods([...goods]\n              .sort((a, b) => a.name.localeCompare(b.name))\n              .slice(0, 5));\n            break;\n\n          case 'redOnly':\n            setGoods(goods\n              .filter((goodsItem: IGoodsItem) => goodsItem.color === 'red'));\n            break;\n\n          default:\n            setGoods(goods);\n            break;\n        }\n\n        setIsLoading(false);\n      }, 1000);\n\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row center-align\">\n        {FILTERS.map(({ id, name, title }) => (\n          <button\n            key={id}\n            type=\"button\"\n            className=\"waves-effect waves-light btn-large mx1\"\n            onClick={() => loadGoods(name)}\n          >\n            {title}\n          </button>\n        ))}\n      </div>\n      {isLoading ? (\n        <div className=\"row center-align\">\n          <div className=\"preloader-wrapper small active\">\n            <div className=\"spinner-layer spinner-green-only\">\n              <div className=\"circle-clipper left\">\n                <div className=\"circle\"></div>\n              </div><div className=\"gap-patch\">\n                <div className=\"circle\"></div>\n              </div><div className=\"circle-clipper right\">\n                <div className=\"circle\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n        ) : (\n          <div className=\"row\">\n            <div className=\"col s6 offset-s3\">\n              <GoodsList goods={goods}/>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}